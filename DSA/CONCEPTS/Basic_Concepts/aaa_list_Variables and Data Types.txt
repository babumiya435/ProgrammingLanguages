**************** list_Variables and Data Types ***************

Here's a list of common variable types you can create in C:

    Integer Variables: 
        Used to store whole numbers without decimal points.
        int: Standard integer type, typically 4 bytes in size.
        short: Short integer type, typically 2 bytes in size.
        long: Long integer type, typically 4 or 8 bytes in size.
        unsigned int: Unsigned integer type, which can only store non-negative integers.
        signed int: Signed integer type, which can store both positive and negative integers.

    Floating-point Variables: 
        Used to store numbers with decimal points.
        float: Single-precision floating-point type, typically 4 bytes in size.
        double: Double-precision floating-point type, typically 8 bytes in size.

    Character Variables: 
        Used to store individual characters.
        char: Character type, typically 1 byte in size.

    Boolean Variables: 
        Used to store true/false values.
        bool: Boolean type, which can have values true or false. In C, boolean values are typically represented using integers (0 for false, non-zero for true), but you can define boolean variables using stdbool.h header in modern C.

    Pointers: 
        Used to store memory addresses.
        Pointers to any of the above types, e.g., int*, float*, char*, etc.

    Arrays: 
        Used to store multiple values of the same type.
        Arrays of any of the above types, e.g., int[], float[], char[], etc.

    Structures: 
        Used to group related variables under a single name.
        struct: User-defined composite type that can contain variables of different types.

    Enums: 
        Used to define named integer constants.
        enum:User-defined type with a fixed set of named values.
        
    Void Variables: 
        Used to represent the absence of type information.
        void: Special type used as the return type of functions that do not return a value, and as a generic pointer type.

    User-defined Types: 
        You can define your own custom types using typedef.

