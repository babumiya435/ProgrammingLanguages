JavaScript provides various ways to split and join strings. Hereâ€™s a comprehensive overview of these methods with code examples:

### String Splitting

#### 1. **Using `split(separator, limit)`**
Splits a string into an array of substrings based on a separator.

```javascript
let str = "apple,banana,cherry";
let fruits = str.split(",");
console.log(fruits); // ["apple", "banana", "cherry"]

let limitedFruits = str.split(",", 2);
console.log(limitedFruits); // ["apple", "banana"]
```

#### 2. **Using Regular Expressions with `split(separator, limit)`**
Splits a string using a regular expression as a separator.

```javascript
let str = "apple1banana2cherry";
let fruits = str.split(/\d/);
console.log(fruits); // ["apple", "banana", "cherry"]
```

#### 3. **Splitting by Empty String**
Splits a string into an array of individual characters.

```javascript
let str = "hello";
let chars = str.split("");
console.log(chars); // ["h", "e", "l", "l", "o"]
```

### String Joining

#### 1. **Using `join(separator)`**
Joins an array of substrings into a single string using a specified separator.

```javascript
let fruits = ["apple", "banana", "cherry"];
let str = fruits.join(", ");
console.log(str); // "apple, banana, cherry"
```

#### 2. **Joining with an Empty String**
Joins an array of substrings into a single string without any separator.

```javascript
let chars = ["h", "e", "l", "l", "o"];
let str = chars.join("");
console.log(str); // "hello"
```

#### 3. **Joining with Custom Separators**
Joins an array with a custom separator.

```javascript
let words = ["The", "quick", "brown", "fox"];
let sentence = words.join(" | ");
console.log(sentence); // "The | quick | brown | fox"
```

### Combining Split and Join

#### 1. **Splitting and Rejoining**
Example of modifying and rejoining a string.

```javascript
let str = "apple,banana,cherry";
let fruits = str.split(",");
fruits[1] = "blueberry"; // Modify the array
let newStr = fruits.join(","); // Join back to a string
console.log(newStr); // "apple,blueberry,cherry"
```

#### 2. **Removing Parts of a String**
Example of removing a specific part of a string by splitting and joining.

```javascript
let str = "Hello, dear friend!";
let parts = str.split(", "); // Split at the comma
let newStr = parts.join(", "); // Join with the same separator
console.log(newStr); // "Hello, dear friend!"
```

### Advanced Usage

#### 1. **Splitting and Joining Using Regular Expressions**
Handling more complex patterns.

```javascript
let str = "one;two;three;four";
let parts = str.split(/;/); // Split by semicolon
let result = parts.join(" | "); // Join with pipe separator
console.log(result); // "one | two | three | four"
```

#### 2. **Handling Edge Cases**
Managing cases where the string is empty or the separator is not found.

```javascript
let str = "";
let result = str.split(",");
console.log(result); // [""]

let str2 = "Hello";
let result2 = str2.split("x");
console.log(result2); // ["Hello"]
```

These methods allow for flexible manipulation of strings by splitting them into components and joining them back together as needed.